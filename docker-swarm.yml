version: "3.9"

services:
  web:
    image: ghcr.io/fredmagas/meu-portfolio:latest
    secrets:
      - source: portfolio_secret_key
        target: django_secret_key
      - email_port
      - email_host
      - email_host_user
      - email_host_password
      - email_default
      - cloudinary_cloud_name
      - cloudinary_api_key
      - cloudinary_api_secret
      - secret_turnstile_key
      - db_password
      - postgres_db
      - postgres_host
      - postgres_port
      - postgres_user
    environment:
      # caminhos para que python-decouple leia o conte√∫do
      SECRET_KEY: /run/secrets/django_secret_key
      EMAIL_PORT: /run/secrets/email_port
      EMAIL_HOST: /run/secrets/email_host
      EMAIL_HOST_USER: /run/secrets/email_host_user
      EMAIL_HOST_PASSWORD: /run/secrets/email_host_password
      DEFAULT_FROM_EMAIL: /run/secrets/email_default
      CLOUDINARY_CLOUD_NAME: /run/secrets/cloudinary_cloud_name
      CLOUDINARY_API_KEY: /run/secrets/cloudinary_api_key
      CLOUDINARY_API_SECRET: /run/secrets/cloudinary_api_secret
      SECRET_TURNSTILE_KEY: /run/secrets/secret_turnstile_key
      POSTGRES_DB: /run/secrets/postgres_db
      POSTGRES_USER: /run/secrets/postgres_user
      POSTGRES_PASSWORD: /run/secrets/db_password
      POSTGRES_HOST: /run/secrets/postgres_host
      POSTGRES_PORT: /run/secrets/postgres_port
    deploy:
      replicas: 2
      update_config:
        order: start-first 
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 256M
    ports:
      - "8010:8000"
    networks:
      - backend_portfolio

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: portfoliodb
      POSTGRES_USER: portfolio
      POSTGRES_PASSWORD: /run/secrets/db_password
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    secrets:
      - db_password
    networks:
      - backend_portfolio
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  backend_portfolio:

volumes:
  pgdata:

secrets:
  portfolio_secret_key:    {external: true}
  email_port:              {external: true}
  email_host:              {external: true}
  email_host_user:         {external: true}
  email_host_password:     {external: true}
  email_default:           {external: true}
  cloudinary_cloud_name:   {external: true}
  cloudinary_api_key:      {external: true}
  cloudinary_api_secret:   {external: true}
  secret_turnstile_key:    {external: true}
  db_password:             {external: true}
  postgres_db:             {external: true}
  postgres_host:           {external: true}
  postgres_user:           {external: true}
  postgres_port:           {external: true}
